// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Airdropped extends ethereum.Event {
  get params(): Airdropped__Params {
    return new Airdropped__Params(this);
  }
}

export class Airdropped__Params {
  _event: Airdropped;

  constructor(event: Airdropped) {
    this._event = event;
  }

  get to(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get quantity(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get fromTokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BaseURISet extends ethereum.Event {
  get params(): BaseURISet__Params {
    return new BaseURISet__Params(this);
  }
}

export class BaseURISet__Params {
  _event: BaseURISet;

  constructor(event: BaseURISet) {
    this._event = event;
  }

  get baseURI(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class ConsecutiveTransfer extends ethereum.Event {
  get params(): ConsecutiveTransfer__Params {
    return new ConsecutiveTransfer__Params(this);
  }
}

export class ConsecutiveTransfer__Params {
  _event: ConsecutiveTransfer;

  constructor(event: ConsecutiveTransfer) {
    this._event = event;
  }

  get fromTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get toTokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class ContractURISet extends ethereum.Event {
  get params(): ContractURISet__Params {
    return new ContractURISet__Params(this);
  }
}

export class ContractURISet__Params {
  _event: ContractURISet;

  constructor(event: ContractURISet) {
    this._event = event;
  }

  get contractURI(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class ERC20Withdrawn extends ethereum.Event {
  get params(): ERC20Withdrawn__Params {
    return new ERC20Withdrawn__Params(this);
  }
}

export class ERC20Withdrawn__Params {
  _event: ERC20Withdrawn;

  constructor(event: ERC20Withdrawn) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get caller(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class ETHWithdrawn extends ethereum.Event {
  get params(): ETHWithdrawn__Params {
    return new ETHWithdrawn__Params(this);
  }
}

export class ETHWithdrawn__Params {
  _event: ETHWithdrawn;

  constructor(event: ETHWithdrawn) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class EditionCutoffTimeSet extends ethereum.Event {
  get params(): EditionCutoffTimeSet__Params {
    return new EditionCutoffTimeSet__Params(this);
  }
}

export class EditionCutoffTimeSet__Params {
  _event: EditionCutoffTimeSet;

  constructor(event: EditionCutoffTimeSet) {
    this._event = event;
  }

  get editionCutoffTime_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EditionMaxMintableRangeSet extends ethereum.Event {
  get params(): EditionMaxMintableRangeSet__Params {
    return new EditionMaxMintableRangeSet__Params(this);
  }
}

export class EditionMaxMintableRangeSet__Params {
  _event: EditionMaxMintableRangeSet;

  constructor(event: EditionMaxMintableRangeSet) {
    this._event = event;
  }

  get editionMaxMintableLower_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get editionMaxMintableUpper_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FundingRecipientSet extends ethereum.Event {
  get params(): FundingRecipientSet__Params {
    return new FundingRecipientSet__Params(this);
  }
}

export class FundingRecipientSet__Params {
  _event: FundingRecipientSet;

  constructor(event: FundingRecipientSet) {
    this._event = event;
  }

  get fundingRecipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MetadataFrozen extends ethereum.Event {
  get params(): MetadataFrozen__Params {
    return new MetadataFrozen__Params(this);
  }
}

export class MetadataFrozen__Params {
  _event: MetadataFrozen;

  constructor(event: MetadataFrozen) {
    this._event = event;
  }

  get metadataModule(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get baseURI(): string {
    return this._event.parameters[1].value.toString();
  }

  get contractURI(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class MetadataModuleSet extends ethereum.Event {
  get params(): MetadataModuleSet__Params {
    return new MetadataModuleSet__Params(this);
  }
}

export class MetadataModuleSet__Params {
  _event: MetadataModuleSet;

  constructor(event: MetadataModuleSet) {
    this._event = event;
  }

  get metadataModule(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MintRandomnessEnabledSet extends ethereum.Event {
  get params(): MintRandomnessEnabledSet__Params {
    return new MintRandomnessEnabledSet__Params(this);
  }
}

export class MintRandomnessEnabledSet__Params {
  _event: MintRandomnessEnabledSet;

  constructor(event: MintRandomnessEnabledSet) {
    this._event = event;
  }

  get mintRandomnessEnabled_(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class Minted extends ethereum.Event {
  get params(): Minted__Params {
    return new Minted__Params(this);
  }
}

export class Minted__Params {
  _event: Minted;

  constructor(event: Minted) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get quantity(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get fromTokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OperatorFilteringEnablededSet extends ethereum.Event {
  get params(): OperatorFilteringEnablededSet__Params {
    return new OperatorFilteringEnablededSet__Params(this);
  }
}

export class OperatorFilteringEnablededSet__Params {
  _event: OperatorFilteringEnablededSet;

  constructor(event: OperatorFilteringEnablededSet) {
    this._event = event;
  }

  get operatorFilteringEnabled_(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class OwnershipHandoverCanceled extends ethereum.Event {
  get params(): OwnershipHandoverCanceled__Params {
    return new OwnershipHandoverCanceled__Params(this);
  }
}

export class OwnershipHandoverCanceled__Params {
  _event: OwnershipHandoverCanceled;

  constructor(event: OwnershipHandoverCanceled) {
    this._event = event;
  }

  get pendingOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipHandoverRequested extends ethereum.Event {
  get params(): OwnershipHandoverRequested__Params {
    return new OwnershipHandoverRequested__Params(this);
  }
}

export class OwnershipHandoverRequested__Params {
  _event: OwnershipHandoverRequested;

  constructor(event: OwnershipHandoverRequested) {
    this._event = event;
  }

  get pendingOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RolesUpdated extends ethereum.Event {
  get params(): RolesUpdated__Params {
    return new RolesUpdated__Params(this);
  }
}

export class RolesUpdated__Params {
  _event: RolesUpdated;

  constructor(event: RolesUpdated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get roles(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RoyaltySet extends ethereum.Event {
  get params(): RoyaltySet__Params {
    return new RoyaltySet__Params(this);
  }
}

export class RoyaltySet__Params {
  _event: RoyaltySet;

  constructor(event: RoyaltySet) {
    this._event = event;
  }

  get bps(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class SoundEditionInitialized extends ethereum.Event {
  get params(): SoundEditionInitialized__Params {
    return new SoundEditionInitialized__Params(this);
  }
}

export class SoundEditionInitialized__Params {
  _event: SoundEditionInitialized;

  constructor(event: SoundEditionInitialized) {
    this._event = event;
  }

  get edition_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name_(): string {
    return this._event.parameters[1].value.toString();
  }

  get symbol_(): string {
    return this._event.parameters[2].value.toString();
  }

  get metadataModule_(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get baseURI_(): string {
    return this._event.parameters[4].value.toString();
  }

  get contractURI_(): string {
    return this._event.parameters[5].value.toString();
  }

  get fundingRecipient_(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get royaltyBPS_(): i32 {
    return this._event.parameters[7].value.toI32();
  }

  get editionMaxMintableLower_(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get editionMaxMintableUpper_(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get editionCutoffTime_(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get flags_(): i32 {
    return this._event.parameters[11].value.toI32();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SoundEditionV1_1__editionInfoResultInfoStruct extends ethereum.Tuple {
  get baseURI(): string {
    return this[0].toString();
  }

  get contractURI(): string {
    return this[1].toString();
  }

  get name(): string {
    return this[2].toString();
  }

  get symbol(): string {
    return this[3].toString();
  }

  get fundingRecipient(): Address {
    return this[4].toAddress();
  }

  get editionMaxMintable(): BigInt {
    return this[5].toBigInt();
  }

  get editionMaxMintableUpper(): BigInt {
    return this[6].toBigInt();
  }

  get editionMaxMintableLower(): BigInt {
    return this[7].toBigInt();
  }

  get editionCutoffTime(): BigInt {
    return this[8].toBigInt();
  }

  get metadataModule(): Address {
    return this[9].toAddress();
  }

  get mintRandomness(): BigInt {
    return this[10].toBigInt();
  }

  get royaltyBPS(): i32 {
    return this[11].toI32();
  }

  get mintRandomnessEnabled(): boolean {
    return this[12].toBoolean();
  }

  get mintConcluded(): boolean {
    return this[13].toBoolean();
  }

  get isMetadataFrozen(): boolean {
    return this[14].toBoolean();
  }

  get nextTokenId(): BigInt {
    return this[15].toBigInt();
  }

  get totalBurned(): BigInt {
    return this[16].toBigInt();
  }

  get totalMinted(): BigInt {
    return this[17].toBigInt();
  }

  get totalSupply(): BigInt {
    return this[18].toBigInt();
  }
}

export class SoundEditionV1_1__explicitOwnershipOfResultValue0Struct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get startTimestamp(): BigInt {
    return this[1].toBigInt();
  }

  get burned(): boolean {
    return this[2].toBoolean();
  }

  get extraData(): i32 {
    return this[3].toI32();
  }
}

export class SoundEditionV1_1__explicitOwnershipsOfResultValue0Struct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get startTimestamp(): BigInt {
    return this[1].toBigInt();
  }

  get burned(): boolean {
    return this[2].toBoolean();
  }

  get extraData(): i32 {
    return this[3].toI32();
  }
}

export class SoundEditionV1_1__royaltyInfoResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getFundingRecipient_(): Address {
    return this.value0;
  }

  getRoyaltyAmount(): BigInt {
    return this.value1;
  }
}

export class SoundEditionV1_1 extends ethereum.SmartContract {
  static bind(address: Address): SoundEditionV1_1 {
    return new SoundEditionV1_1("SoundEditionV1_1", address);
  }

  ADDRESS_BATCH_MINT_LIMIT(): BigInt {
    let result = super.call(
      "ADDRESS_BATCH_MINT_LIMIT",
      "ADDRESS_BATCH_MINT_LIMIT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_ADDRESS_BATCH_MINT_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ADDRESS_BATCH_MINT_LIMIT",
      "ADDRESS_BATCH_MINT_LIMIT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ADMIN_ROLE(): BigInt {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  METADATA_IS_FROZEN_FLAG(): i32 {
    let result = super.call(
      "METADATA_IS_FROZEN_FLAG",
      "METADATA_IS_FROZEN_FLAG():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_METADATA_IS_FROZEN_FLAG(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "METADATA_IS_FROZEN_FLAG",
      "METADATA_IS_FROZEN_FLAG():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  MINTER_ROLE(): BigInt {
    let result = super.call("MINTER_ROLE", "MINTER_ROLE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MINTER_ROLE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MINTER_ROLE", "MINTER_ROLE():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MINT_RANDOMNESS_ENABLED_FLAG(): i32 {
    let result = super.call(
      "MINT_RANDOMNESS_ENABLED_FLAG",
      "MINT_RANDOMNESS_ENABLED_FLAG():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_MINT_RANDOMNESS_ENABLED_FLAG(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "MINT_RANDOMNESS_ENABLED_FLAG",
      "MINT_RANDOMNESS_ENABLED_FLAG():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  OPERATOR_FILTERING_ENABLED_FLAG(): i32 {
    let result = super.call(
      "OPERATOR_FILTERING_ENABLED_FLAG",
      "OPERATOR_FILTERING_ENABLED_FLAG():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_OPERATOR_FILTERING_ENABLED_FLAG(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "OPERATOR_FILTERING_ENABLED_FLAG",
      "OPERATOR_FILTERING_ENABLED_FLAG():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  airdrop(to: Array<Address>, quantity: BigInt): BigInt {
    let result = super.call("airdrop", "airdrop(address[],uint256):(uint256)", [
      ethereum.Value.fromAddressArray(to),
      ethereum.Value.fromUnsignedBigInt(quantity)
    ]);

    return result[0].toBigInt();
  }

  try_airdrop(
    to: Array<Address>,
    quantity: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "airdrop",
      "airdrop(address[],uint256):(uint256)",
      [
        ethereum.Value.fromAddressArray(to),
        ethereum.Value.fromUnsignedBigInt(quantity)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  baseURI(): string {
    let result = super.call("baseURI", "baseURI():(string)", []);

    return result[0].toString();
  }

  try_baseURI(): ethereum.CallResult<string> {
    let result = super.tryCall("baseURI", "baseURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  contractURI(): string {
    let result = super.call("contractURI", "contractURI():(string)", []);

    return result[0].toString();
  }

  try_contractURI(): ethereum.CallResult<string> {
    let result = super.tryCall("contractURI", "contractURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  editionCutoffTime(): BigInt {
    let result = super.call(
      "editionCutoffTime",
      "editionCutoffTime():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_editionCutoffTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "editionCutoffTime",
      "editionCutoffTime():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  editionInfo(): SoundEditionV1_1__editionInfoResultInfoStruct {
    let result = super.call(
      "editionInfo",
      "editionInfo():((string,string,string,string,address,uint32,uint32,uint32,uint32,address,uint256,uint16,bool,bool,bool,uint256,uint256,uint256,uint256))",
      []
    );

    return changetype<SoundEditionV1_1__editionInfoResultInfoStruct>(
      result[0].toTuple()
    );
  }

  try_editionInfo(): ethereum.CallResult<
    SoundEditionV1_1__editionInfoResultInfoStruct
  > {
    let result = super.tryCall(
      "editionInfo",
      "editionInfo():((string,string,string,string,address,uint32,uint32,uint32,uint32,address,uint256,uint16,bool,bool,bool,uint256,uint256,uint256,uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<SoundEditionV1_1__editionInfoResultInfoStruct>(
        value[0].toTuple()
      )
    );
  }

  editionMaxMintable(): BigInt {
    let result = super.call(
      "editionMaxMintable",
      "editionMaxMintable():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_editionMaxMintable(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "editionMaxMintable",
      "editionMaxMintable():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  editionMaxMintableLower(): BigInt {
    let result = super.call(
      "editionMaxMintableLower",
      "editionMaxMintableLower():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_editionMaxMintableLower(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "editionMaxMintableLower",
      "editionMaxMintableLower():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  editionMaxMintableUpper(): BigInt {
    let result = super.call(
      "editionMaxMintableUpper",
      "editionMaxMintableUpper():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_editionMaxMintableUpper(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "editionMaxMintableUpper",
      "editionMaxMintableUpper():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  explicitOwnershipOf(
    tokenId: BigInt
  ): SoundEditionV1_1__explicitOwnershipOfResultValue0Struct {
    let result = super.call(
      "explicitOwnershipOf",
      "explicitOwnershipOf(uint256):((address,uint64,bool,uint24))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return changetype<SoundEditionV1_1__explicitOwnershipOfResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_explicitOwnershipOf(
    tokenId: BigInt
  ): ethereum.CallResult<
    SoundEditionV1_1__explicitOwnershipOfResultValue0Struct
  > {
    let result = super.tryCall(
      "explicitOwnershipOf",
      "explicitOwnershipOf(uint256):((address,uint64,bool,uint24))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<SoundEditionV1_1__explicitOwnershipOfResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  explicitOwnershipsOf(
    tokenIds: Array<BigInt>
  ): Array<SoundEditionV1_1__explicitOwnershipsOfResultValue0Struct> {
    let result = super.call(
      "explicitOwnershipsOf",
      "explicitOwnershipsOf(uint256[]):((address,uint64,bool,uint24)[])",
      [ethereum.Value.fromUnsignedBigIntArray(tokenIds)]
    );

    return result[0].toTupleArray<
      SoundEditionV1_1__explicitOwnershipsOfResultValue0Struct
    >();
  }

  try_explicitOwnershipsOf(
    tokenIds: Array<BigInt>
  ): ethereum.CallResult<
    Array<SoundEditionV1_1__explicitOwnershipsOfResultValue0Struct>
  > {
    let result = super.tryCall(
      "explicitOwnershipsOf",
      "explicitOwnershipsOf(uint256[]):((address,uint64,bool,uint24)[])",
      [ethereum.Value.fromUnsignedBigIntArray(tokenIds)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        SoundEditionV1_1__explicitOwnershipsOfResultValue0Struct
      >()
    );
  }

  fundingRecipient(): Address {
    let result = super.call(
      "fundingRecipient",
      "fundingRecipient():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_fundingRecipient(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "fundingRecipient",
      "fundingRecipient():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hasAllRoles(user: Address, roles: BigInt): boolean {
    let result = super.call(
      "hasAllRoles",
      "hasAllRoles(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(roles)
      ]
    );

    return result[0].toBoolean();
  }

  try_hasAllRoles(user: Address, roles: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasAllRoles",
      "hasAllRoles(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(roles)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasAnyRole(user: Address, roles: BigInt): boolean {
    let result = super.call(
      "hasAnyRole",
      "hasAnyRole(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(roles)
      ]
    );

    return result[0].toBoolean();
  }

  try_hasAnyRole(user: Address, roles: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasAnyRole",
      "hasAnyRole(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(roles)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMetadataFrozen(): boolean {
    let result = super.call(
      "isMetadataFrozen",
      "isMetadataFrozen():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_isMetadataFrozen(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isMetadataFrozen",
      "isMetadataFrozen():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  metadataModule(): Address {
    let result = super.call("metadataModule", "metadataModule():(address)", []);

    return result[0].toAddress();
  }

  try_metadataModule(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "metadataModule",
      "metadataModule():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  mintConcluded(): boolean {
    let result = super.call("mintConcluded", "mintConcluded():(bool)", []);

    return result[0].toBoolean();
  }

  try_mintConcluded(): ethereum.CallResult<boolean> {
    let result = super.tryCall("mintConcluded", "mintConcluded():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mintRandomness(): BigInt {
    let result = super.call("mintRandomness", "mintRandomness():(uint256)", []);

    return result[0].toBigInt();
  }

  try_mintRandomness(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mintRandomness",
      "mintRandomness():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mintRandomnessEnabled(): boolean {
    let result = super.call(
      "mintRandomnessEnabled",
      "mintRandomnessEnabled():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_mintRandomnessEnabled(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "mintRandomnessEnabled",
      "mintRandomnessEnabled():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nextTokenId(): BigInt {
    let result = super.call("nextTokenId", "nextTokenId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextTokenId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nextTokenId", "nextTokenId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numberBurned(owner: Address): BigInt {
    let result = super.call("numberBurned", "numberBurned(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_numberBurned(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberBurned",
      "numberBurned(address):(uint256)",
      [ethereum.Value.fromAddress(owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numberMinted(owner: Address): BigInt {
    let result = super.call("numberMinted", "numberMinted(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_numberMinted(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberMinted",
      "numberMinted(address):(uint256)",
      [ethereum.Value.fromAddress(owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  operatorFilteringEnabled(): boolean {
    let result = super.call(
      "operatorFilteringEnabled",
      "operatorFilteringEnabled():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_operatorFilteringEnabled(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "operatorFilteringEnabled",
      "operatorFilteringEnabled():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ordinalsFromRoles(roles: BigInt): Array<i32> {
    let result = super.call(
      "ordinalsFromRoles",
      "ordinalsFromRoles(uint256):(uint8[])",
      [ethereum.Value.fromUnsignedBigInt(roles)]
    );

    return result[0].toI32Array();
  }

  try_ordinalsFromRoles(roles: BigInt): ethereum.CallResult<Array<i32>> {
    let result = super.tryCall(
      "ordinalsFromRoles",
      "ordinalsFromRoles(uint256):(uint8[])",
      [ethereum.Value.fromUnsignedBigInt(roles)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32Array());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownershipHandoverExpiresAt(pendingOwner: Address): BigInt {
    let result = super.call(
      "ownershipHandoverExpiresAt",
      "ownershipHandoverExpiresAt(address):(uint256)",
      [ethereum.Value.fromAddress(pendingOwner)]
    );

    return result[0].toBigInt();
  }

  try_ownershipHandoverExpiresAt(
    pendingOwner: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ownershipHandoverExpiresAt",
      "ownershipHandoverExpiresAt(address):(uint256)",
      [ethereum.Value.fromAddress(pendingOwner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ownershipHandoverValidFor(): BigInt {
    let result = super.call(
      "ownershipHandoverValidFor",
      "ownershipHandoverValidFor():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_ownershipHandoverValidFor(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ownershipHandoverValidFor",
      "ownershipHandoverValidFor():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rolesFromOrdinals(ordinals: Array<i32>): BigInt {
    let result = super.call(
      "rolesFromOrdinals",
      "rolesFromOrdinals(uint8[]):(uint256)",
      [ethereum.Value.fromI32Array(ordinals)]
    );

    return result[0].toBigInt();
  }

  try_rolesFromOrdinals(ordinals: Array<i32>): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "rolesFromOrdinals",
      "rolesFromOrdinals(uint8[]):(uint256)",
      [ethereum.Value.fromI32Array(ordinals)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rolesOf(user: Address): BigInt {
    let result = super.call("rolesOf", "rolesOf(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBigInt();
  }

  try_rolesOf(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("rolesOf", "rolesOf(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  royaltyBPS(): i32 {
    let result = super.call("royaltyBPS", "royaltyBPS():(uint16)", []);

    return result[0].toI32();
  }

  try_royaltyBPS(): ethereum.CallResult<i32> {
    let result = super.tryCall("royaltyBPS", "royaltyBPS():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  royaltyInfo(
    param0: BigInt,
    salePrice: BigInt
  ): SoundEditionV1_1__royaltyInfoResult {
    let result = super.call(
      "royaltyInfo",
      "royaltyInfo(uint256,uint256):(address,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(salePrice)
      ]
    );

    return new SoundEditionV1_1__royaltyInfoResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_royaltyInfo(
    param0: BigInt,
    salePrice: BigInt
  ): ethereum.CallResult<SoundEditionV1_1__royaltyInfoResult> {
    let result = super.tryCall(
      "royaltyInfo",
      "royaltyInfo(uint256,uint256):(address,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(salePrice)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SoundEditionV1_1__royaltyInfoResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokensOfOwner(owner: Address): Array<BigInt> {
    let result = super.call(
      "tokensOfOwner",
      "tokensOfOwner(address):(uint256[])",
      [ethereum.Value.fromAddress(owner)]
    );

    return result[0].toBigIntArray();
  }

  try_tokensOfOwner(owner: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "tokensOfOwner",
      "tokensOfOwner(address):(uint256[])",
      [ethereum.Value.fromAddress(owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  tokensOfOwnerIn(owner: Address, start: BigInt, stop: BigInt): Array<BigInt> {
    let result = super.call(
      "tokensOfOwnerIn",
      "tokensOfOwnerIn(address,uint256,uint256):(uint256[])",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(stop)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_tokensOfOwnerIn(
    owner: Address,
    start: BigInt,
    stop: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "tokensOfOwnerIn",
      "tokensOfOwnerIn(address,uint256,uint256):(uint256[])",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(stop)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  totalBurned(): BigInt {
    let result = super.call("totalBurned", "totalBurned():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalBurned(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalBurned", "totalBurned():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalMinted(): BigInt {
    let result = super.call("totalMinted", "totalMinted():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalMinted(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalMinted", "totalMinted():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AirdropCall extends ethereum.Call {
  get inputs(): AirdropCall__Inputs {
    return new AirdropCall__Inputs(this);
  }

  get outputs(): AirdropCall__Outputs {
    return new AirdropCall__Outputs(this);
  }
}

export class AirdropCall__Inputs {
  _call: AirdropCall;

  constructor(call: AirdropCall) {
    this._call = call;
  }

  get to(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AirdropCall__Outputs {
  _call: AirdropCall;

  constructor(call: AirdropCall) {
    this._call = call;
  }

  get fromTokenId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class CancelOwnershipHandoverCall extends ethereum.Call {
  get inputs(): CancelOwnershipHandoverCall__Inputs {
    return new CancelOwnershipHandoverCall__Inputs(this);
  }

  get outputs(): CancelOwnershipHandoverCall__Outputs {
    return new CancelOwnershipHandoverCall__Outputs(this);
  }
}

export class CancelOwnershipHandoverCall__Inputs {
  _call: CancelOwnershipHandoverCall;

  constructor(call: CancelOwnershipHandoverCall) {
    this._call = call;
  }
}

export class CancelOwnershipHandoverCall__Outputs {
  _call: CancelOwnershipHandoverCall;

  constructor(call: CancelOwnershipHandoverCall) {
    this._call = call;
  }
}

export class CompleteOwnershipHandoverCall extends ethereum.Call {
  get inputs(): CompleteOwnershipHandoverCall__Inputs {
    return new CompleteOwnershipHandoverCall__Inputs(this);
  }

  get outputs(): CompleteOwnershipHandoverCall__Outputs {
    return new CompleteOwnershipHandoverCall__Outputs(this);
  }
}

export class CompleteOwnershipHandoverCall__Inputs {
  _call: CompleteOwnershipHandoverCall;

  constructor(call: CompleteOwnershipHandoverCall) {
    this._call = call;
  }

  get pendingOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CompleteOwnershipHandoverCall__Outputs {
  _call: CompleteOwnershipHandoverCall;

  constructor(call: CompleteOwnershipHandoverCall) {
    this._call = call;
  }
}

export class FreezeMetadataCall extends ethereum.Call {
  get inputs(): FreezeMetadataCall__Inputs {
    return new FreezeMetadataCall__Inputs(this);
  }

  get outputs(): FreezeMetadataCall__Outputs {
    return new FreezeMetadataCall__Outputs(this);
  }
}

export class FreezeMetadataCall__Inputs {
  _call: FreezeMetadataCall;

  constructor(call: FreezeMetadataCall) {
    this._call = call;
  }
}

export class FreezeMetadataCall__Outputs {
  _call: FreezeMetadataCall;

  constructor(call: FreezeMetadataCall) {
    this._call = call;
  }
}

export class GrantRolesCall extends ethereum.Call {
  get inputs(): GrantRolesCall__Inputs {
    return new GrantRolesCall__Inputs(this);
  }

  get outputs(): GrantRolesCall__Outputs {
    return new GrantRolesCall__Outputs(this);
  }
}

export class GrantRolesCall__Inputs {
  _call: GrantRolesCall;

  constructor(call: GrantRolesCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get roles(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class GrantRolesCall__Outputs {
  _call: GrantRolesCall;

  constructor(call: GrantRolesCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get name_(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get metadataModule_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get baseURI_(): string {
    return this._call.inputValues[3].value.toString();
  }

  get contractURI_(): string {
    return this._call.inputValues[4].value.toString();
  }

  get fundingRecipient_(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get royaltyBPS_(): i32 {
    return this._call.inputValues[6].value.toI32();
  }

  get editionMaxMintableLower_(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get editionMaxMintableUpper_(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get editionCutoffTime_(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get flags_(): i32 {
    return this._call.inputValues[10].value.toI32();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get quantity(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get fromTokenId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceRolesCall extends ethereum.Call {
  get inputs(): RenounceRolesCall__Inputs {
    return new RenounceRolesCall__Inputs(this);
  }

  get outputs(): RenounceRolesCall__Outputs {
    return new RenounceRolesCall__Outputs(this);
  }
}

export class RenounceRolesCall__Inputs {
  _call: RenounceRolesCall;

  constructor(call: RenounceRolesCall) {
    this._call = call;
  }

  get roles(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RenounceRolesCall__Outputs {
  _call: RenounceRolesCall;

  constructor(call: RenounceRolesCall) {
    this._call = call;
  }
}

export class RequestOwnershipHandoverCall extends ethereum.Call {
  get inputs(): RequestOwnershipHandoverCall__Inputs {
    return new RequestOwnershipHandoverCall__Inputs(this);
  }

  get outputs(): RequestOwnershipHandoverCall__Outputs {
    return new RequestOwnershipHandoverCall__Outputs(this);
  }
}

export class RequestOwnershipHandoverCall__Inputs {
  _call: RequestOwnershipHandoverCall;

  constructor(call: RequestOwnershipHandoverCall) {
    this._call = call;
  }
}

export class RequestOwnershipHandoverCall__Outputs {
  _call: RequestOwnershipHandoverCall;

  constructor(call: RequestOwnershipHandoverCall) {
    this._call = call;
  }
}

export class RevokeRolesCall extends ethereum.Call {
  get inputs(): RevokeRolesCall__Inputs {
    return new RevokeRolesCall__Inputs(this);
  }

  get outputs(): RevokeRolesCall__Outputs {
    return new RevokeRolesCall__Outputs(this);
  }
}

export class RevokeRolesCall__Inputs {
  _call: RevokeRolesCall;

  constructor(call: RevokeRolesCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get roles(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RevokeRolesCall__Outputs {
  _call: RevokeRolesCall;

  constructor(call: RevokeRolesCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetBaseURICall extends ethereum.Call {
  get inputs(): SetBaseURICall__Inputs {
    return new SetBaseURICall__Inputs(this);
  }

  get outputs(): SetBaseURICall__Outputs {
    return new SetBaseURICall__Outputs(this);
  }
}

export class SetBaseURICall__Inputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }

  get baseURI_(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetBaseURICall__Outputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }
}

export class SetContractURICall extends ethereum.Call {
  get inputs(): SetContractURICall__Inputs {
    return new SetContractURICall__Inputs(this);
  }

  get outputs(): SetContractURICall__Outputs {
    return new SetContractURICall__Outputs(this);
  }
}

export class SetContractURICall__Inputs {
  _call: SetContractURICall;

  constructor(call: SetContractURICall) {
    this._call = call;
  }

  get contractURI_(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetContractURICall__Outputs {
  _call: SetContractURICall;

  constructor(call: SetContractURICall) {
    this._call = call;
  }
}

export class SetEditionCutoffTimeCall extends ethereum.Call {
  get inputs(): SetEditionCutoffTimeCall__Inputs {
    return new SetEditionCutoffTimeCall__Inputs(this);
  }

  get outputs(): SetEditionCutoffTimeCall__Outputs {
    return new SetEditionCutoffTimeCall__Outputs(this);
  }
}

export class SetEditionCutoffTimeCall__Inputs {
  _call: SetEditionCutoffTimeCall;

  constructor(call: SetEditionCutoffTimeCall) {
    this._call = call;
  }

  get editionCutoffTime_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEditionCutoffTimeCall__Outputs {
  _call: SetEditionCutoffTimeCall;

  constructor(call: SetEditionCutoffTimeCall) {
    this._call = call;
  }
}

export class SetEditionMaxMintableRangeCall extends ethereum.Call {
  get inputs(): SetEditionMaxMintableRangeCall__Inputs {
    return new SetEditionMaxMintableRangeCall__Inputs(this);
  }

  get outputs(): SetEditionMaxMintableRangeCall__Outputs {
    return new SetEditionMaxMintableRangeCall__Outputs(this);
  }
}

export class SetEditionMaxMintableRangeCall__Inputs {
  _call: SetEditionMaxMintableRangeCall;

  constructor(call: SetEditionMaxMintableRangeCall) {
    this._call = call;
  }

  get editionMaxMintableLower_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get editionMaxMintableUpper_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetEditionMaxMintableRangeCall__Outputs {
  _call: SetEditionMaxMintableRangeCall;

  constructor(call: SetEditionMaxMintableRangeCall) {
    this._call = call;
  }
}

export class SetFundingRecipientCall extends ethereum.Call {
  get inputs(): SetFundingRecipientCall__Inputs {
    return new SetFundingRecipientCall__Inputs(this);
  }

  get outputs(): SetFundingRecipientCall__Outputs {
    return new SetFundingRecipientCall__Outputs(this);
  }
}

export class SetFundingRecipientCall__Inputs {
  _call: SetFundingRecipientCall;

  constructor(call: SetFundingRecipientCall) {
    this._call = call;
  }

  get fundingRecipient_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFundingRecipientCall__Outputs {
  _call: SetFundingRecipientCall;

  constructor(call: SetFundingRecipientCall) {
    this._call = call;
  }
}

export class SetMetadataModuleCall extends ethereum.Call {
  get inputs(): SetMetadataModuleCall__Inputs {
    return new SetMetadataModuleCall__Inputs(this);
  }

  get outputs(): SetMetadataModuleCall__Outputs {
    return new SetMetadataModuleCall__Outputs(this);
  }
}

export class SetMetadataModuleCall__Inputs {
  _call: SetMetadataModuleCall;

  constructor(call: SetMetadataModuleCall) {
    this._call = call;
  }

  get metadataModule_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMetadataModuleCall__Outputs {
  _call: SetMetadataModuleCall;

  constructor(call: SetMetadataModuleCall) {
    this._call = call;
  }
}

export class SetMintRandomnessEnabledCall extends ethereum.Call {
  get inputs(): SetMintRandomnessEnabledCall__Inputs {
    return new SetMintRandomnessEnabledCall__Inputs(this);
  }

  get outputs(): SetMintRandomnessEnabledCall__Outputs {
    return new SetMintRandomnessEnabledCall__Outputs(this);
  }
}

export class SetMintRandomnessEnabledCall__Inputs {
  _call: SetMintRandomnessEnabledCall;

  constructor(call: SetMintRandomnessEnabledCall) {
    this._call = call;
  }

  get mintRandomnessEnabled_(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetMintRandomnessEnabledCall__Outputs {
  _call: SetMintRandomnessEnabledCall;

  constructor(call: SetMintRandomnessEnabledCall) {
    this._call = call;
  }
}

export class SetOperatorFilteringEnabledCall extends ethereum.Call {
  get inputs(): SetOperatorFilteringEnabledCall__Inputs {
    return new SetOperatorFilteringEnabledCall__Inputs(this);
  }

  get outputs(): SetOperatorFilteringEnabledCall__Outputs {
    return new SetOperatorFilteringEnabledCall__Outputs(this);
  }
}

export class SetOperatorFilteringEnabledCall__Inputs {
  _call: SetOperatorFilteringEnabledCall;

  constructor(call: SetOperatorFilteringEnabledCall) {
    this._call = call;
  }

  get operatorFilteringEnabled_(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetOperatorFilteringEnabledCall__Outputs {
  _call: SetOperatorFilteringEnabledCall;

  constructor(call: SetOperatorFilteringEnabledCall) {
    this._call = call;
  }
}

export class SetRoyaltyCall extends ethereum.Call {
  get inputs(): SetRoyaltyCall__Inputs {
    return new SetRoyaltyCall__Inputs(this);
  }

  get outputs(): SetRoyaltyCall__Outputs {
    return new SetRoyaltyCall__Outputs(this);
  }
}

export class SetRoyaltyCall__Inputs {
  _call: SetRoyaltyCall;

  constructor(call: SetRoyaltyCall) {
    this._call = call;
  }

  get royaltyBPS_(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetRoyaltyCall__Outputs {
  _call: SetRoyaltyCall;

  constructor(call: SetRoyaltyCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawERC20Call extends ethereum.Call {
  get inputs(): WithdrawERC20Call__Inputs {
    return new WithdrawERC20Call__Inputs(this);
  }

  get outputs(): WithdrawERC20Call__Outputs {
    return new WithdrawERC20Call__Outputs(this);
  }
}

export class WithdrawERC20Call__Inputs {
  _call: WithdrawERC20Call;

  constructor(call: WithdrawERC20Call) {
    this._call = call;
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class WithdrawERC20Call__Outputs {
  _call: WithdrawERC20Call;

  constructor(call: WithdrawERC20Call) {
    this._call = call;
  }
}

export class WithdrawETHCall extends ethereum.Call {
  get inputs(): WithdrawETHCall__Inputs {
    return new WithdrawETHCall__Inputs(this);
  }

  get outputs(): WithdrawETHCall__Outputs {
    return new WithdrawETHCall__Outputs(this);
  }
}

export class WithdrawETHCall__Inputs {
  _call: WithdrawETHCall;

  constructor(call: WithdrawETHCall) {
    this._call = call;
  }
}

export class WithdrawETHCall__Outputs {
  _call: WithdrawETHCall;

  constructor(call: WithdrawETHCall) {
    this._call = call;
  }
}
